# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

# 동작 조건 설정: main, develop 브랜치에 push 혹은 pull request가 발생할 경우 동작
on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  # Spring boot 애플리케이션을 빌드하여 도커 허브에 푸시하는 과정
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v4
    
    # 1. Java 17 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Set up Firebase credentials
      run: echo "${{ secrets.FIREBASE_KEY }}" > ./src/main/resources/iplan-firebase.json

    - name: Verify Firebase credentials file
      run: ls -al ./src/main/resources/iplan-firebase.json

    # 2. Spring Boot 애플리케이션 빌드
    - name: Build with Gradle
      run: ./gradlew build --no-daemon --warning-mode all

    # 3. Docker 이미지 빌드
    - name: docker image build
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/iplan-demo .

    # 4. DockerHub 로그인
    - name: docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # 5. Docker Hub 이미지 푸시
    - name: docker Hub push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/iplan-demo

    # 6. 파이어베이스
    - name: Run Firebase Firestore tests
      run: ./gradlew test
      
    - name: Upload build reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: build-reports
        path: build/reports

  test:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
  
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
  
    - name: Set up Firebase credentials
      run: echo "${{ secrets.FIREBASE_KEY }}" > ./src/main/resources/iplan-firebase.json
  
    - name: Verify Firebase credentials file
      run: ls -al ./src/main/resources/iplan-firebase.json
  
    - name: Run Firebase Firestore tests
      run: ./gradlew test --no-daemon --warning-mode all
  
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: build/reports/tests/test
